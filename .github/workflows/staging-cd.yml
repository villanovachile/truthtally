name: Deploy to Staging

on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.IP_ADDRESS }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.STAGING_PATH }}
            git checkout main
            git pull
            git checkout ${{ github.event.pull_request.head.ref }}
            npm i
            npm run build
            pm2 restart ${{ secrets.STAGING_NAME }}
      - name: Add or update PR comment
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number: issue_number } = context.issue;
            const commentAuthor = "github-actions[bot]";
            const commentIdentifier = "<!-- deploy-comment -->";
            const latestCommitSha = context.payload.pull_request.head.sha;
            const latestCommitUrl = context.payload.pull_request.head.repo.html_url + '/commit/' + latestCommitSha;
            const commentBody = `
${commentIdentifier}
### âœ… Deploy preview ready!

| ðŸ”¨ Latest commit | [${latestCommitSha.substring(0, 7)}](${latestCommitUrl}) |
| --- | --- |
| ðŸ˜Ž Deploy Preview | ${{ secrets.DEPLOY_PREVIEW_URL }}
`;

            const { data: comments } = await github.rest.issues.listComments({ owner, repo, issue_number });
            const existingComment = comments.find(comment => comment.user.login === commentAuthor && comment.body.includes(commentIdentifier));

            if (existingComment) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: existingComment.id, body: commentBody });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number, body: commentBody });
            }

      - name: Publish Summary
        run: echo -e "Staging Deployment Successful!" >> $GITHUB_STEP_SUMMARY
