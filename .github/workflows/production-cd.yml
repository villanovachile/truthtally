name: Deploy to Production

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - '.prettierrc'
      - '.eslintrc.json'
      - 'package.json'
      - 'package-lock.json'
      - 'jsconfig.json'
      - '.github/**'
      - '.screenshots/**'
      
permissions: write-all

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.IP_ADDRESS }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.PRODUCTION_PATH }}
            git checkout main
            git pull
            npm i
            npm run build
            pm2 restart ${{ secrets.PRODUCTION_NAME }}

      - name: Check if commit originated from a PR
        id: check_pr
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prList = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "closed",
            });

            const mergedPR = prList.data.find(pr => pr.merge_commit_sha === context.sha);
            console.log('Steps outcome:')
            console.log(${{ steps.build_step.outcome }});
            return !!mergedPR;

      - name: Stop staging environment if build successful
        if: ${{ success() && steps.check_pr.outputs.result == 'true' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.IP_ADDRESS }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            pm2 stop ${{ secrets.STAGING_NAME }}

      - name: Publish Summary
        if: success()
        run: echo -e "Production Deployment Successful!" >> $GITHUB_STEP_SUMMARY
